import { c as create_ssr_component, a as subscribe, d as each, e as escape, b as add_attribute, f as null_to_empty } from "../../../chunks/ssr.js";
import "devalue";
import "../../../chunks/client.js";
import { r as readable } from "../../../chunks/index2.js";
const get_initial_motion_preference = () => {
  return false;
};
const reduced_motion = readable(get_initial_motion_preference(), (set) => {
});
const css = {
  code: "form.svelte-1pg2j5l.svelte-1pg2j5l{width:100%;height:100%;display:flex;flex-direction:column;align-items:center;justify-content:center;gap:1rem;flex:1}.how-to-play.svelte-1pg2j5l.svelte-1pg2j5l{color:var(--color-text)}.how-to-play.svelte-1pg2j5l.svelte-1pg2j5l::before{content:'i';display:inline-block;font-size:0.8em;font-weight:900;width:1em;height:1em;padding:0.2em;line-height:1;border:1.5px solid var(--color-text);border-radius:50%;text-align:center;margin:0 0.5em 0 0;position:relative;top:-0.05em}.grid.svelte-1pg2j5l.svelte-1pg2j5l{--width:min(100vw, 40vh, 380px);max-width:var(--width);align-self:center;justify-self:center;width:100%;height:100%;display:flex;flex-direction:column;justify-content:flex-start}.grid.svelte-1pg2j5l .row.svelte-1pg2j5l{display:grid;grid-template-columns:repeat(5, 1fr);grid-gap:0.2rem;margin:0 0 0.2rem 0}@media(prefers-reduced-motion: no-preference){.grid.bad-guess.svelte-1pg2j5l .row.current.svelte-1pg2j5l{animation:svelte-1pg2j5l-wiggle 0.5s}}.grid.playing.svelte-1pg2j5l .row.current.svelte-1pg2j5l{filter:drop-shadow(3px 3px 10px var(--color-bg-0))}.letter.svelte-1pg2j5l.svelte-1pg2j5l{aspect-ratio:1;width:100%;display:flex;align-items:center;justify-content:center;text-align:center;box-sizing:border-box;text-transform:lowercase;border:none;font-size:calc(0.08 * var(--width));border-radius:2px;background:white;margin:0;color:rgba(0, 0, 0, 0.7)}.letter.missing.svelte-1pg2j5l.svelte-1pg2j5l{background:rgba(255, 255, 255, 0.5);color:rgba(0, 0, 0, 0.5)}.letter.exact.svelte-1pg2j5l.svelte-1pg2j5l{background:var(--color-theme-2);color:white}.letter.close.svelte-1pg2j5l.svelte-1pg2j5l{border:2px solid var(--color-theme-2)}.selected.svelte-1pg2j5l.svelte-1pg2j5l{outline:2px solid var(--color-theme-1)}.controls.svelte-1pg2j5l.svelte-1pg2j5l{text-align:center;justify-content:center;height:min(18vh, 10rem)}.keyboard.svelte-1pg2j5l.svelte-1pg2j5l{--gap:0.2rem;position:relative;display:flex;flex-direction:column;gap:var(--gap);height:100%}.keyboard.svelte-1pg2j5l .row.svelte-1pg2j5l{display:flex;justify-content:center;gap:0.2rem;flex:1}.keyboard.svelte-1pg2j5l button.svelte-1pg2j5l,.keyboard.svelte-1pg2j5l button.svelte-1pg2j5l:disabled{--size:min(8vw, 4vh, 40px);background-color:white;color:black;width:var(--size);border:none;border-radius:2px;font-size:calc(var(--size) * 0.5);margin:0}.keyboard.svelte-1pg2j5l button.exact.svelte-1pg2j5l{background:var(--color-theme-2);color:white}.keyboard.svelte-1pg2j5l button.missing.svelte-1pg2j5l{opacity:0.5}.keyboard.svelte-1pg2j5l button.close.svelte-1pg2j5l{border:2px solid var(--color-theme-2)}.keyboard.svelte-1pg2j5l button.svelte-1pg2j5l:focus{background:var(--color-theme-1);color:white;outline:none}.keyboard.svelte-1pg2j5l button[data-key='enter'].svelte-1pg2j5l,.keyboard.svelte-1pg2j5l button[data-key='backspace'].svelte-1pg2j5l{position:absolute;bottom:0;width:calc(1.5 * var(--size));height:calc(1 / 3 * (100% - 2 * var(--gap)));text-transform:uppercase;font-size:calc(0.3 * var(--size));padding-top:calc(0.15 * var(--size))}.keyboard.svelte-1pg2j5l button[data-key='enter'].svelte-1pg2j5l{right:calc(50% + 3.5 * var(--size) + 0.8rem)}.keyboard.svelte-1pg2j5l button[data-key='backspace'].svelte-1pg2j5l{left:calc(50% + 3.5 * var(--size) + 0.8rem)}.keyboard.svelte-1pg2j5l button[data-key='enter'].svelte-1pg2j5l:disabled{opacity:0.5}.restart.svelte-1pg2j5l.svelte-1pg2j5l{width:100%;padding:1rem;background:rgba(255, 255, 255, 0.5);border-radius:2px;border:none}.restart.svelte-1pg2j5l.svelte-1pg2j5l:focus,.restart.svelte-1pg2j5l.svelte-1pg2j5l:hover{background:var(--color-theme-1);color:white;outline:none}@keyframes svelte-1pg2j5l-wiggle{0%{transform:translateX(0)}10%{transform:translateX(-2px)}30%{transform:translateX(4px)}50%{transform:translateX(-6px)}70%{transform:translateX(+4px)}90%{transform:translateX(-2px)}100%{transform:translateX(0)}}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n\\timport { confetti } from '@neoconfetti/svelte';\\n\\timport { enhance } from '$app/forms';\\n\\n\\timport { reduced_motion } from './reduced-motion';\\n\\n\\t/** @type {import('./$types').PageData} */\\n\\texport let data;\\n\\n\\t/** @type {import('./$types').ActionData} */\\n\\texport let form;\\n\\n\\t/** Whether or not the user has won */\\n\\t$: won = data.answers.at(-1) === 'xxxxx';\\n\\n\\t/** The index of the current guess */\\n\\t$: i = won ? -1 : data.answers.length;\\n\\n\\t/** The current guess */\\n\\t$: currentGuess = data.guesses[i] || '';\\n\\n\\t/** Whether the current guess can be submitted */\\n\\t$: submittable = currentGuess.length === 5;\\n\\n\\t/**\\n\\t * A map of classnames for all letters that have been guessed,\\n\\t * used for styling the keyboard\\n\\t * @type {Record<string, 'exact' | 'close' | 'missing'>}\\n\\t */\\n\\tlet classnames;\\n\\n\\t/**\\n\\t * A map of descriptions for all letters that have been guessed,\\n\\t * used for adding text for assistive technology (e.g. screen readers)\\n\\t * @type {Record<string, string>}\\n\\t */\\n\\tlet description;\\n\\n\\t$: {\\n\\t\\tclassnames = {};\\n\\t\\tdescription = {};\\n\\n\\t\\tdata.answers.forEach((answer, i) => {\\n\\t\\t\\tconst guess = data.guesses[i];\\n\\n\\t\\t\\tfor (let i = 0; i < 5; i += 1) {\\n\\t\\t\\t\\tconst letter = guess[i];\\n\\n\\t\\t\\t\\tif (answer[i] === 'x') {\\n\\t\\t\\t\\t\\tclassnames[letter] = 'exact';\\n\\t\\t\\t\\t\\tdescription[letter] = 'correct';\\n\\t\\t\\t\\t} else if (!classnames[letter]) {\\n\\t\\t\\t\\t\\tclassnames[letter] = answer[i] === 'c' ? 'close' : 'missing';\\n\\t\\t\\t\\t\\tdescription[letter] = answer[i] === 'c' ? 'present' : 'absent';\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\n\\t/**\\n\\t * Modify the game state without making a trip to the server,\\n\\t * if client-side JavaScript is enabled\\n\\t * @param {MouseEvent} event\\n\\t */\\n\\tfunction update(event) {\\n\\t\\tconst key = /** @type {HTMLButtonElement} */ (event.target).getAttribute('data-key');\\n\\n\\t\\tif (key === 'backspace') {\\n\\t\\t\\tcurrentGuess = currentGuess.slice(0, -1);\\n\\t\\t\\tif (form?.badGuess) form.badGuess = false;\\n\\t\\t} else if (currentGuess.length < 5) {\\n\\t\\t\\tcurrentGuess += key;\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t * Trigger form logic in response to a keydown event, so that\\n\\t * desktop users can use the keyboard to play the game\\n\\t * @param {KeyboardEvent} event\\n\\t */\\n\\tfunction keydown(event) {\\n\\t\\tif (event.metaKey) return;\\n\\n\\t\\tif (event.key === 'Enter' && !submittable) return;\\n\\n\\t\\tdocument\\n\\t\\t\\t.querySelector(\`[data-key=\\"\${event.key}\\" i]\`)\\n\\t\\t\\t?.dispatchEvent(new MouseEvent('click', { cancelable: true }));\\n\\t}\\n<\/script>\\n\\n<svelte:window on:keydown={keydown} />\\n\\n<svelte:head>\\n\\t<title>Sverdle</title>\\n\\t<meta name=\\"description\\" content=\\"A Wordle clone written in SvelteKit\\" />\\n</svelte:head>\\n\\n<h1 class=\\"visually-hidden\\">Sverdle</h1>\\n\\n<form\\n\\tmethod=\\"POST\\"\\n\\taction=\\"?/enter\\"\\n\\tuse:enhance={() => {\\n\\t\\t// prevent default callback from resetting the form\\n\\t\\treturn ({ update }) => {\\n\\t\\t\\tupdate({ reset: false });\\n\\t\\t};\\n\\t}}\\n>\\n\\t<a class=\\"how-to-play\\" href=\\"/sverdle/how-to-play\\">How to play</a>\\n\\n\\t<div class=\\"grid\\" class:playing={!won} class:bad-guess={form?.badGuess}>\\n\\t\\t{#each Array.from(Array(6).keys()) as row (row)}\\n\\t\\t\\t{@const current = row === i}\\n\\t\\t\\t<h2 class=\\"visually-hidden\\">Row {row + 1}</h2>\\n\\t\\t\\t<div class=\\"row\\" class:current>\\n\\t\\t\\t\\t{#each Array.from(Array(5).keys()) as column (column)}\\n\\t\\t\\t\\t\\t{@const guess = current ? currentGuess : data.guesses[row]}\\n\\t\\t\\t\\t\\t{@const answer = data.answers[row]?.[column]}\\n\\t\\t\\t\\t\\t{@const value = guess?.[column] ?? ''}\\n\\t\\t\\t\\t\\t{@const selected = current && column === guess.length}\\n\\t\\t\\t\\t\\t{@const exact = answer === 'x'}\\n\\t\\t\\t\\t\\t{@const close = answer === 'c'}\\n\\t\\t\\t\\t\\t{@const missing = answer === '_'}\\n\\t\\t\\t\\t\\t<div class=\\"letter\\" class:exact class:close class:missing class:selected>\\n\\t\\t\\t\\t\\t\\t{value}\\n\\t\\t\\t\\t\\t\\t<span class=\\"visually-hidden\\">\\n\\t\\t\\t\\t\\t\\t\\t{#if exact}\\n\\t\\t\\t\\t\\t\\t\\t\\t(correct)\\n\\t\\t\\t\\t\\t\\t\\t{:else if close}\\n\\t\\t\\t\\t\\t\\t\\t\\t(present)\\n\\t\\t\\t\\t\\t\\t\\t{:else if missing}\\n\\t\\t\\t\\t\\t\\t\\t\\t(absent)\\n\\t\\t\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t\\t\\tempty\\n\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t<input name=\\"guess\\" disabled={!current} type=\\"hidden\\" {value} />\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</div>\\n\\t\\t{/each}\\n\\t</div>\\n\\n\\t<div class=\\"controls\\">\\n\\t\\t{#if won || data.answers.length >= 6}\\n\\t\\t\\t{#if !won && data.answer}\\n\\t\\t\\t\\t<p>the answer was \\"{data.answer}\\"</p>\\n\\t\\t\\t{/if}\\n\\t\\t\\t<button data-key=\\"enter\\" class=\\"restart selected\\" formaction=\\"?/restart\\">\\n\\t\\t\\t\\t{won ? 'you won :)' : \`game over :(\`} play again?\\n\\t\\t\\t</button>\\n\\t\\t{:else}\\n\\t\\t\\t<div class=\\"keyboard\\">\\n\\t\\t\\t\\t<button data-key=\\"enter\\" class:selected={submittable} disabled={!submittable}>enter</button>\\n\\n\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\ton:click|preventDefault={update}\\n\\t\\t\\t\\t\\tdata-key=\\"backspace\\"\\n\\t\\t\\t\\t\\tformaction=\\"?/update\\"\\n\\t\\t\\t\\t\\tname=\\"key\\"\\n\\t\\t\\t\\t\\tvalue=\\"backspace\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\tback\\n\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t{#each ['qwertyuiop', 'asdfghjkl', 'zxcvbnm'] as row}\\n\\t\\t\\t\\t\\t<div class=\\"row\\">\\n\\t\\t\\t\\t\\t\\t{#each row as letter}\\n\\t\\t\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\t\\t\\ton:click|preventDefault={update}\\n\\t\\t\\t\\t\\t\\t\\t\\tdata-key={letter}\\n\\t\\t\\t\\t\\t\\t\\t\\tclass={classnames[letter]}\\n\\t\\t\\t\\t\\t\\t\\t\\tdisabled={submittable}\\n\\t\\t\\t\\t\\t\\t\\t\\tformaction=\\"?/update\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tname=\\"key\\"\\n\\t\\t\\t\\t\\t\\t\\t\\tvalue={letter}\\n\\t\\t\\t\\t\\t\\t\\t\\taria-label=\\"{letter} {description[letter] || ''}\\"\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t{letter}\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\t</div>\\n</form>\\n\\n{#if won}\\n\\t<div\\n\\t\\tstyle=\\"position: absolute; left: 50%; top: 30%\\"\\n\\t\\tuse:confetti={{\\n\\t\\t\\tparticleCount: $reduced_motion ? 0 : undefined,\\n\\t\\t\\tforce: 0.7,\\n\\t\\t\\tstageWidth: window.innerWidth,\\n\\t\\t\\tstageHeight: window.innerHeight,\\n\\t\\t\\tcolors: ['#ff3e00', '#40b3ff', '#676778']\\n\\t\\t}}\\n\\t></div>\\n{/if}\\n\\n<style>\\n\\tform {\\n\\t\\twidth: 100%;\\n\\t\\theight: 100%;\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: center;\\n\\t\\tgap: 1rem;\\n\\t\\tflex: 1;\\n\\t}\\n\\n\\t.how-to-play {\\n\\t\\tcolor: var(--color-text);\\n\\t}\\n\\n\\t.how-to-play::before {\\n\\t\\tcontent: 'i';\\n\\t\\tdisplay: inline-block;\\n\\t\\tfont-size: 0.8em;\\n\\t\\tfont-weight: 900;\\n\\t\\twidth: 1em;\\n\\t\\theight: 1em;\\n\\t\\tpadding: 0.2em;\\n\\t\\tline-height: 1;\\n\\t\\tborder: 1.5px solid var(--color-text);\\n\\t\\tborder-radius: 50%;\\n\\t\\ttext-align: center;\\n\\t\\tmargin: 0 0.5em 0 0;\\n\\t\\tposition: relative;\\n\\t\\ttop: -0.05em;\\n\\t}\\n\\n\\t.grid {\\n\\t\\t--width: min(100vw, 40vh, 380px);\\n\\t\\tmax-width: var(--width);\\n\\t\\talign-self: center;\\n\\t\\tjustify-self: center;\\n\\t\\twidth: 100%;\\n\\t\\theight: 100%;\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tjustify-content: flex-start;\\n\\t}\\n\\n\\t.grid .row {\\n\\t\\tdisplay: grid;\\n\\t\\tgrid-template-columns: repeat(5, 1fr);\\n\\t\\tgrid-gap: 0.2rem;\\n\\t\\tmargin: 0 0 0.2rem 0;\\n\\t}\\n\\n\\t@media (prefers-reduced-motion: no-preference) {\\n\\t\\t.grid.bad-guess .row.current {\\n\\t\\t\\tanimation: wiggle 0.5s;\\n\\t\\t}\\n\\t}\\n\\n\\t.grid.playing .row.current {\\n\\t\\tfilter: drop-shadow(3px 3px 10px var(--color-bg-0));\\n\\t}\\n\\n\\t.letter {\\n\\t\\taspect-ratio: 1;\\n\\t\\twidth: 100%;\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: center;\\n\\t\\ttext-align: center;\\n\\t\\tbox-sizing: border-box;\\n\\t\\ttext-transform: lowercase;\\n\\t\\tborder: none;\\n\\t\\tfont-size: calc(0.08 * var(--width));\\n\\t\\tborder-radius: 2px;\\n\\t\\tbackground: white;\\n\\t\\tmargin: 0;\\n\\t\\tcolor: rgba(0, 0, 0, 0.7);\\n\\t}\\n\\n\\t.letter.missing {\\n\\t\\tbackground: rgba(255, 255, 255, 0.5);\\n\\t\\tcolor: rgba(0, 0, 0, 0.5);\\n\\t}\\n\\n\\t.letter.exact {\\n\\t\\tbackground: var(--color-theme-2);\\n\\t\\tcolor: white;\\n\\t}\\n\\n\\t.letter.close {\\n\\t\\tborder: 2px solid var(--color-theme-2);\\n\\t}\\n\\n\\t.selected {\\n\\t\\toutline: 2px solid var(--color-theme-1);\\n\\t}\\n\\n\\t.controls {\\n\\t\\ttext-align: center;\\n\\t\\tjustify-content: center;\\n\\t\\theight: min(18vh, 10rem);\\n\\t}\\n\\n\\t.keyboard {\\n\\t\\t--gap: 0.2rem;\\n\\t\\tposition: relative;\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: var(--gap);\\n\\t\\theight: 100%;\\n\\t}\\n\\n\\t.keyboard .row {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: center;\\n\\t\\tgap: 0.2rem;\\n\\t\\tflex: 1;\\n\\t}\\n\\n\\t.keyboard button,\\n\\t.keyboard button:disabled {\\n\\t\\t--size: min(8vw, 4vh, 40px);\\n\\t\\tbackground-color: white;\\n\\t\\tcolor: black;\\n\\t\\twidth: var(--size);\\n\\t\\tborder: none;\\n\\t\\tborder-radius: 2px;\\n\\t\\tfont-size: calc(var(--size) * 0.5);\\n\\t\\tmargin: 0;\\n\\t}\\n\\n\\t.keyboard button.exact {\\n\\t\\tbackground: var(--color-theme-2);\\n\\t\\tcolor: white;\\n\\t}\\n\\n\\t.keyboard button.missing {\\n\\t\\topacity: 0.5;\\n\\t}\\n\\n\\t.keyboard button.close {\\n\\t\\tborder: 2px solid var(--color-theme-2);\\n\\t}\\n\\n\\t.keyboard button:focus {\\n\\t\\tbackground: var(--color-theme-1);\\n\\t\\tcolor: white;\\n\\t\\toutline: none;\\n\\t}\\n\\n\\t.keyboard button[data-key='enter'],\\n\\t.keyboard button[data-key='backspace'] {\\n\\t\\tposition: absolute;\\n\\t\\tbottom: 0;\\n\\t\\twidth: calc(1.5 * var(--size));\\n\\t\\theight: calc(1 / 3 * (100% - 2 * var(--gap)));\\n\\t\\ttext-transform: uppercase;\\n\\t\\tfont-size: calc(0.3 * var(--size));\\n\\t\\tpadding-top: calc(0.15 * var(--size));\\n\\t}\\n\\n\\t.keyboard button[data-key='enter'] {\\n\\t\\tright: calc(50% + 3.5 * var(--size) + 0.8rem);\\n\\t}\\n\\n\\t.keyboard button[data-key='backspace'] {\\n\\t\\tleft: calc(50% + 3.5 * var(--size) + 0.8rem);\\n\\t}\\n\\n\\t.keyboard button[data-key='enter']:disabled {\\n\\t\\topacity: 0.5;\\n\\t}\\n\\n\\t.restart {\\n\\t\\twidth: 100%;\\n\\t\\tpadding: 1rem;\\n\\t\\tbackground: rgba(255, 255, 255, 0.5);\\n\\t\\tborder-radius: 2px;\\n\\t\\tborder: none;\\n\\t}\\n\\n\\t.restart:focus,\\n\\t.restart:hover {\\n\\t\\tbackground: var(--color-theme-1);\\n\\t\\tcolor: white;\\n\\t\\toutline: none;\\n\\t}\\n\\n\\t@keyframes wiggle {\\n\\t\\t0% {\\n\\t\\t\\ttransform: translateX(0);\\n\\t\\t}\\n\\t\\t10% {\\n\\t\\t\\ttransform: translateX(-2px);\\n\\t\\t}\\n\\t\\t30% {\\n\\t\\t\\ttransform: translateX(4px);\\n\\t\\t}\\n\\t\\t50% {\\n\\t\\t\\ttransform: translateX(-6px);\\n\\t\\t}\\n\\t\\t70% {\\n\\t\\t\\ttransform: translateX(+4px);\\n\\t\\t}\\n\\t\\t90% {\\n\\t\\t\\ttransform: translateX(-2px);\\n\\t\\t}\\n\\t\\t100% {\\n\\t\\t\\ttransform: translateX(0);\\n\\t\\t}\\n\\t}\\n</style>\\n"],"names":[],"mappings":"AA4MC,kCAAK,CACJ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,CACP,CAEA,0CAAa,CACZ,KAAK,CAAE,IAAI,YAAY,CACxB,CAEA,0CAAY,QAAS,CACpB,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,YAAY,CACrB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,KAAK,CACd,WAAW,CAAE,CAAC,CACd,MAAM,CAAE,KAAK,CAAC,KAAK,CAAC,IAAI,YAAY,CAAC,CACrC,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACnB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,OACN,CAEA,mCAAM,CACL,OAAO,CAAE,uBAAuB,CAChC,SAAS,CAAE,IAAI,OAAO,CAAC,CACvB,UAAU,CAAE,MAAM,CAClB,YAAY,CAAE,MAAM,CACpB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,UAClB,CAEA,oBAAK,CAAC,mBAAK,CACV,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CACrC,QAAQ,CAAE,MAAM,CAChB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CACpB,CAEA,MAAO,yBAAyB,aAAa,CAAE,CAC9C,KAAK,yBAAU,CAAC,IAAI,uBAAS,CAC5B,SAAS,CAAE,qBAAM,CAAC,IACnB,CACD,CAEA,KAAK,uBAAQ,CAAC,IAAI,uBAAS,CAC1B,MAAM,CAAE,YAAY,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,CACnD,CAEA,qCAAQ,CACP,YAAY,CAAE,CAAC,CACf,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,UAAU,CACtB,cAAc,CAAE,SAAS,CACzB,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CACpC,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CACzB,CAEA,OAAO,sCAAS,CACf,UAAU,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,KAAK,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CACzB,CAEA,OAAO,oCAAO,CACb,UAAU,CAAE,IAAI,eAAe,CAAC,CAChC,KAAK,CAAE,KACR,CAEA,OAAO,oCAAO,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,eAAe,CACtC,CAEA,uCAAU,CACT,OAAO,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,eAAe,CACvC,CAEA,uCAAU,CACT,UAAU,CAAE,MAAM,CAClB,eAAe,CAAE,MAAM,CACvB,MAAM,CAAE,IAAI,IAAI,CAAC,CAAC,KAAK,CACxB,CAEA,uCAAU,CACT,KAAK,CAAE,MAAM,CACb,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,GAAG,CAAE,IAAI,KAAK,CAAC,CACf,MAAM,CAAE,IACT,CAEA,wBAAS,CAAC,mBAAK,CACd,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,GAAG,CAAE,MAAM,CACX,IAAI,CAAE,CACP,CAEA,wBAAS,CAAC,qBAAM,CAChB,wBAAS,CAAC,qBAAM,SAAU,CACzB,MAAM,CAAE,mBAAmB,CAC3B,gBAAgB,CAAE,KAAK,CACvB,KAAK,CAAE,KAAK,CACZ,KAAK,CAAE,IAAI,MAAM,CAAC,CAClB,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAClC,MAAM,CAAE,CACT,CAEA,wBAAS,CAAC,MAAM,qBAAO,CACtB,UAAU,CAAE,IAAI,eAAe,CAAC,CAChC,KAAK,CAAE,KACR,CAEA,wBAAS,CAAC,MAAM,uBAAS,CACxB,OAAO,CAAE,GACV,CAEA,wBAAS,CAAC,MAAM,qBAAO,CACtB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,eAAe,CACtC,CAEA,wBAAS,CAAC,qBAAM,MAAO,CACtB,UAAU,CAAE,IAAI,eAAe,CAAC,CAChC,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IACV,CAEA,wBAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,gBAAC,CAClC,wBAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,gBAAE,CACtC,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAC9B,MAAM,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAC7C,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAClC,WAAW,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CACrC,CAEA,wBAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,gBAAE,CAClC,KAAK,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAC7C,CAEA,wBAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,gBAAE,CACtC,IAAI,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAC5C,CAEA,wBAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,gBAAC,SAAU,CAC3C,OAAO,CAAE,GACV,CAEA,sCAAS,CACR,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,IACT,CAEA,sCAAQ,MAAM,CACd,sCAAQ,MAAO,CACd,UAAU,CAAE,IAAI,eAAe,CAAC,CAChC,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IACV,CAEA,WAAW,qBAAO,CACjB,EAAG,CACF,SAAS,CAAE,WAAW,CAAC,CACxB,CACA,GAAI,CACH,SAAS,CAAE,WAAW,IAAI,CAC3B,CACA,GAAI,CACH,SAAS,CAAE,WAAW,GAAG,CAC1B,CACA,GAAI,CACH,SAAS,CAAE,WAAW,IAAI,CAC3B,CACA,GAAI,CACH,SAAS,CAAE,WAAW,IAAI,CAC3B,CACA,GAAI,CACH,SAAS,CAAE,WAAW,IAAI,CAC3B,CACA,IAAK,CACJ,SAAS,CAAE,WAAW,CAAC,CACxB,CACD"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let won;
  let i;
  let currentGuess;
  let submittable;
  let $$unsubscribe_reduced_motion;
  $$unsubscribe_reduced_motion = subscribe(reduced_motion, (value) => value);
  let { data } = $$props;
  let { form } = $$props;
  let classnames;
  let description;
  if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
  if ($$props.form === void 0 && $$bindings.form && form !== void 0) $$bindings.form(form);
  $$result.css.add(css);
  won = data.answers.at(-1) === "xxxxx";
  i = won ? -1 : data.answers.length;
  {
    {
      classnames = {};
      description = {};
      data.answers.forEach((answer, i2) => {
        const guess = data.guesses[i2];
        for (let i3 = 0; i3 < 5; i3 += 1) {
          const letter = guess[i3];
          if (answer[i3] === "x") {
            classnames[letter] = "exact";
            description[letter] = "correct";
          } else if (!classnames[letter]) {
            classnames[letter] = answer[i3] === "c" ? "close" : "missing";
            description[letter] = answer[i3] === "c" ? "present" : "absent";
          }
        }
      });
    }
  }
  currentGuess = data.guesses[i] || "";
  submittable = currentGuess.length === 5;
  $$unsubscribe_reduced_motion();
  return ` ${$$result.head += `<!-- HEAD_svelte-18lvto8_START -->${$$result.title = `<title>Sverdle</title>`, ""}<meta name="description" content="A Wordle clone written in SvelteKit"><!-- HEAD_svelte-18lvto8_END -->`, ""} <h1 class="visually-hidden" data-svelte-h="svelte-16hvqlg">Sverdle</h1> <form method="POST" action="?/enter" class="svelte-1pg2j5l"><a class="how-to-play svelte-1pg2j5l" href="/sverdle/how-to-play" data-svelte-h="svelte-1w3fhu3">How to play</a> <div class="${[
    "grid svelte-1pg2j5l",
    (!won ? "playing" : "") + " " + (form?.badGuess ? "bad-guess" : "")
  ].join(" ").trim()}">${each(Array.from(Array(6).keys()), (row) => {
    let current = row === i;
    return ` <h2 class="visually-hidden">Row ${escape(row + 1)}</h2> <div class="${["row svelte-1pg2j5l", current ? "current" : ""].join(" ").trim()}">${each(Array.from(Array(5).keys()), (column) => {
      let guess = current ? currentGuess : data.guesses[row], answer = data.answers[row]?.[column], value = guess?.[column] ?? "", selected = current && column === guess.length, exact = answer === "x", close = answer === "c", missing = answer === "_";
      return `       <div class="${[
        "letter svelte-1pg2j5l",
        (exact ? "exact" : "") + " " + (close ? "close" : "") + " " + (missing ? "missing" : "") + " " + (selected ? "selected" : "")
      ].join(" ").trim()}">${escape(value)} <span class="visually-hidden">${exact ? `(correct)` : `${close ? `(present)` : `${missing ? `(absent)` : `empty`}`}`}</span> <input name="guess" ${!current ? "disabled" : ""} type="hidden"${add_attribute("value", value, 0)}> </div>`;
    })} </div>`;
  })}</div> <div class="controls svelte-1pg2j5l">${won || data.answers.length >= 6 ? `${!won && data.answer ? `<p>the answer was &quot;${escape(data.answer)}&quot;</p>` : ``} <button data-key="enter" class="restart selected svelte-1pg2j5l" formaction="?/restart">${escape(won ? "you won :)" : `game over :(`)} play again?</button>` : `<div class="keyboard svelte-1pg2j5l"><button data-key="enter" ${!submittable ? "disabled" : ""} class="${["svelte-1pg2j5l", submittable ? "selected" : ""].join(" ").trim()}">enter</button> <button data-key="backspace" formaction="?/update" name="key" value="backspace" class="svelte-1pg2j5l" data-svelte-h="svelte-1ptb1bp">back</button> ${each(["qwertyuiop", "asdfghjkl", "zxcvbnm"], (row) => {
    return `<div class="row svelte-1pg2j5l">${each(row, (letter) => {
      return `<button${add_attribute("data-key", letter, 0)} class="${escape(null_to_empty(classnames[letter]), true) + " svelte-1pg2j5l"}" ${submittable ? "disabled" : ""} formaction="?/update" name="key"${add_attribute("value", letter, 0)} aria-label="${escape(letter, true) + " " + escape(description[letter] || "", true)}">${escape(letter)} </button>`;
    })} </div>`;
  })}</div>`}</div></form> ${won ? `<div style="position: absolute; left: 50%; top: 30%"></div>` : ``}`;
});
export {
  Page as default
};
